name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      host: ${{ steps.filter.outputs.host }}
      extension: ${{ steps.filter.outputs.extension }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            host:
              - 'host/**'
              - 'Justfile'
              - '.github/workflows/**'
            extension:
              - 'extension/**'
              - 'Justfile'
              - '.github/workflows/**'

  host:
    name: Host
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.host == 'true' }}
    defaults:
      run:
        working-directory: host
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cargo cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: host -> target

      - name: rustfmt check
        run: cargo fmt --all -- --check

      - name: clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build --release --all-features

      - name: Test
        run: cargo test --all-features --quiet

  extension-test:
    name: Extension Tests
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.extension == 'true' }}
    defaults:
      run:
        working-directory: extension
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm
          cache-dependency-path: extension/pnpm-lock.yaml

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Format check
        run: pnpm format:check

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm check

      - name: Test
        run: pnpm test

  extension-firefox:
    name: Extension Firefox
    runs-on: ubuntu-latest
    needs: [changes, extension-test]
    if: ${{ needs.changes.outputs.extension == 'true' }}
    defaults:
      run:
        working-directory: extension
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm
          cache-dependency-path: extension/pnpm-lock.yaml

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: "Collect sources"
        run: git archive --format=zip --output=../sources.zip ${{ github.ref }}

      - name: Build (Firefox)
        run: BROWSER=firefox VERSION_SUFFIX=${{ github.run_number }} pnpm build

      - name: Package Firefox extension
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: extension/dist/firefox
          filename: "{name}-{version}.xpi"

      - name: Sign Firefox extension
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: ${{ steps.web-ext-build.outputs.target }}
          sourceCode: sources.zip
          channel: unlisted
          apiKey: ${{ secrets.WEB_EXT_API_KEY }}
          apiSecret: ${{ secrets.WEB_EXT_API_SECRET }}

      - name: Upload signed Firefox extension
        uses: actions/upload-artifact@v4
        with:
          name: tapestry-firefox.xpi
          path: ${{ steps.web-ext-sign.outputs.target }}

  extension-chrome:
    name: Extension Chrome
    runs-on: ubuntu-latest
    needs: [changes, extension-test]
    if: ${{ needs.changes.outputs.extension == 'true' }}
    defaults:
      run:
        working-directory: extension
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: pnpm
          cache-dependency-path: extension/pnpm-lock.yaml

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Build (Chrome)
        run: BROWSER=chrome pnpm build

      - name: Upload Chrome extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: tapestry-chrome
          path: extension/dist/chrome/
